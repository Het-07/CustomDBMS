# Custom DBMS Demo Queries ----------
# This file contains a sequence of queries to demonstrate the functionality of the custom DBMS.
# Follow the sequence for a complete demonstration of the system's capabilities.

# Display all existing databases in the system
SHOW DATABASES

# Create a new database for student information
CREATE DATABASE students

# Select the students database for all subsequent operations
USE students

# Create a table to store student profile information with defined schema
CREATE TABLE Profile (bannerID STRING, firstName STRING, lastName STRING, email STRING, gpa FLOAT)

# View the structure of the newly created Profile table
DESCRIBE Profile

# Insert first student record
INSERT INTO Profile VALUES ('B00123456', 'John', 'Smith', 'B00123456@dal.ca', 3.8)

# Insert second student record
INSERT INTO Profile VALUES ('B00234567', 'Maria', 'Garcia', 'B00234567@dal.ca', 3.9)

# Insert third student record
INSERT INTO Profile VALUES ('B00345678', 'Ahmed', 'Khan', 'B00345678@dal.ca', 4.0)

# Insert fourth student record
INSERT INTO Profile VALUES ('B00456789', 'Emma', 'Wilson', 'B00456789@dal.ca', 3.7)

# Insert fifth student record
INSERT INTO Profile VALUES ('B00567890', 'Michael', 'Chen', 'B00567890@dal.ca', 3.5)

# Retrieve all student records from the Profile table
SELECT * FROM Profile

# Retrieve all students with GPA of 3.8 or higher
SELECT * FROM Profile WHERE gpa >= 3.8

# Begin a transaction - changes won't be permanent until committed
BEGIN TRANSACTION

# Insert a new student record within the transaction
INSERT INTO Profile VALUES ('B00111222', 'James', 'Martinez', 'B00111222@dal.ca', 3.7)

# View data - note that the new record is only visible within the transaction
SELECT * FROM Profile

# Commit the transaction - make changes permanent
COMMIT

# Verify the new record is now visible after commit
SELECT * FROM Profile

# Begin another transaction for demonstration
BEGIN TRANSACTION

# Insert a temporary student record
INSERT INTO Profile VALUES ('B00222333', 'Ethan', 'Johnson', 'B00222333@dal.ca', 3.3)

# Rollback the transaction - discard all changes made in this transaction
ROLLBACK

# Verify the temporary record was not added to the database
SELECT * FROM Profile

# Error demonstration: Try to create a table that already exists
CREATE TABLE Profile (id INT, name STRING)

# Error demonstration: Try to query a non-existent table
SELECT * FROM Courses

# Exit the database management system
EXIT